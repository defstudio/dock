version: '3.5'
services:
    App\Docker\Services\Php:
        restart: unless-stopped
        working_dir: /var/www
        build:
            context: ./services/php/build
            target: fpm
        user: '1000:1000'
        expose:
            - 9000
        environment:
            DOCK: 1
        volumes:
            - './src:/var/www'
            - './services/php/php.ini:/usr/local/etc/php/php.ini'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Docker\Services\Nginx:
        restart: unless-stopped
        working_dir: /var/www
        build:
            context: ./services/nginx/build
        volumes:
            - './src:/var/www'
            - './services/nginx/nginx.conf:/etc/nginx/nginx.conf'
            - './services/nginx/sites-available:/etc/nginx/sites-available'
            - './services/nginx/conf.d/upstream.conf:/etc/nginx/conf.d/upstream.conf'
        ports:
            - '80:80'
        expose:
            - 80
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
        depends_on:
            - php
    App\Recipes\Laravel\Services\Scheduler:
        restart: unless-stopped
        working_dir: /var/www
        build:
            context: ./services/php/build
            target: scheduler
        user: '1000:1000'
        expose:
            - 9000
        environment:
            DOCK: 1
        volumes:
            - './src:/var/www'
            - './services/php/php.ini:/usr/local/etc/php/php.ini'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Recipes\Laravel\Services\Worker:
        restart: unless-stopped
        working_dir: /var/www
        build:
            context: ./services/php/build
            target: worker
        user: '1000:1000'
        expose:
            - 9000
        environment:
            DOCK: 1
        volumes:
            - './src:/var/www'
            - './services/php/php.ini:/usr/local/etc/php/php.ini'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Docker\Services\Composer:
        restart: 'no'
        working_dir: /var/www
        build:
            context: ./services/php/build
            target: composer
        user: '1000:1000'
        expose:
            - 9000
        environment:
            DOCK: 1
        volumes:
            - './src:/var/www'
            - './services/php/php.ini:/usr/local/etc/php/php.ini'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Docker\Services\Node:
        working_dir: /var/www
        build:
            context: ./services/node/build
        ports:
            - '5173:5173'
        expose:
            - 5173
        volumes:
            - './src:/var/www'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Docker\Services\MySql:
        restart: unless-stopped
        command: '--character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password'
        image: 'mysql:8'
        cap_add:
            - SYS_NICE
        expose:
            - 3306
        environment:
            MYSQL_DATABASE: database
            MYSQL_USER: dbuser
            MYSQL_PASSWORD: dbpassword
            MYSQL_ROOT_PASSWORD: root
        volumes:
            - './volumes/mysql/db:/var/lib/mysql'
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
    App\Docker\Services\PhpMyAdmin:
        restart: unless-stopped
        image: phpmyadmin/phpmyadmin
        environment:
            UPLOAD_LIMIT: 3000000000
            MYSQL_ROOT_PASSWORD: root
            PMA_HOST: mysql
        expose:
            - 80
        networks:
            - foo_com_internal_network
        logging:
            options: { max-size: 10m, max-file: '3' }
        depends_on:
            - mysql
networks:
    foo_com_internal_network:
        name: foo_com_internal_network
        driver: bridge
